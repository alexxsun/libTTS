# python/pyproject.toml

[build-system]
requires = ["scikit-build-core", "pybind11"]
build-backend = "scikit_build_core.build"

[project]
name = "libtts"
version = "0.0.1"
description = "A library for processing forest point clouds using TDA."
readme = "../README.md" # Path to the main README
requires-python = ">=3.8"  # Minimum Python version required

# Python dependencies
# laspy[lazrs,laszip]?
dependencies = [
    "numpy",
    "plyfile",
    "laspy",
    "scikit-learn",
    "matplotlib",
    "scipy",
    "opencv-python-headless",
]

[tool.scikit-build]
build.verbose = true
logging.level = "INFO"

build-dir = "../build/{wheel_tag}"
# --- Critical Configuration ---
# Tell scikit-build that the CMake source is one directory up
cmake.source-dir = "../cpp"

# Pass an option to the CMake command to turn on the bindings
# currently set cmake 3.5 
# todo update cmake, deal with $CONDA_PREFIX
cmake.args = ["-DBUILD_PYTHON_BINDINGS=ON",
		"-DCMAKE_POLICY_VERSION_MINIMUM=3.5",
		"-DCMAKE_BUILD_TYPE=Release",
  		#"-DCMAKE_BUILD_WITH_INSTALL_RPATH=ON",
  		#"-DCMAKE_INSTALL_RPATH=$ENV{CONDA_PREFIX}/lib/LASlib;$ENV{CONDA_PREFIX}/lib",
  		#"-DCMAKE_INSTALL_RPATH_USE_LINK_PATH=ON"
		]

# Tell scikit-build where the Python source code is
# (relative to this pyproject.toml file)
wheel.packages = ["src/libtts"]

# site-packages/libtts
wheel.install-dir = "libtts"
